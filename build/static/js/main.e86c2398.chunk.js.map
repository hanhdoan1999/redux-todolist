{"version":3,"sources":["redux/reducers/taskReducer.js","redux/reducers/index.js","redux/store/index.js","views/Header.js","views/Footer.js","redux/actions/index.js","views/Todo.js","views/TodoList.js","views/Add.js","App.js","reportWebVitals.js","index.js"],"names":["intialState","data","error","taskReducer","state","action","type","console","log","filter","el","id","map","complete","task","msg","RootReducer","combineReducers","store","createStore","applyMiddleware","thunk","Header","className","Footer","fetchUpdateName","inputUpdate","updateStatusTask","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","Todo","todo","useDispatch","useState","textChange","setTextChange","editText","setEditText","name","value","onChange","fetchUpdateStatus","checked","disabled","onDoubleClick","text","getTextLine","maxLength","onBlur","autoFocus","e","target","onKeyDown","event","key","alert","preventDefault","stopPropagation","onClick","TodoList","handleToggle","handleDelete","handelEdit","useSelector","useEffect","index","Add","setTask","onSubmit","inputName","Date","now","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e86c2398.chunk.js","sourcesContent":["\r\nconst intialState = {\r\n    data: [],\r\n    error:\"\"\r\n}\r\n\r\nconst taskReducer = (state = intialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"FetchData\":       \r\n            return { ...state, data: action.data }\r\n        case \"FetchDelete\":\r\n            console.log(\"delete task\");\r\n            return { ...state, data: state.data.filter((el) => el.id !== action.data.id) }\r\n        case \"FetchUpdateStatus\":      \r\n            console.log(\"update task\");\r\n            return { ...state, data: state.data.map((el) => el.id === action.data.id ? {...el, complete: action.data.complete} : el)}\r\n        case \"FetchUpdateName\":      \r\n            console.log(\"update task\");\r\n            return { ...state, data: state.data.map((el) => el.id === action.data.id ? {...el, task: action.data.task} : el)}\r\n        case \"AddTask\":\r\n            return { ...state, data: [...state.data, action.data]}\r\n        case \"ERROR\":\r\n            return { ...state, error: action.msg }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport default taskReducer","import { combineReducers } from \"redux\";\nimport taskReducer from \"./taskReducer\";\n\nexport const RootReducer = combineReducers({\n    taskReducer:taskReducer,\n});","import {createStore, applyMiddleware} from 'redux';\nimport { RootReducer } from '../reducers';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(RootReducer, applyMiddleware(thunk));","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n        <h2>Todo App</h2>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            Footer\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","// asynchronous action creator\r\n\r\n\r\n// export const fetchData = () => {\r\n//     return (dispatch) => {\r\n//         return fetch('https://60d8a43aeec56d001747740d.mockapi.io/todos')\r\n//             .then(response =>  response.json())\r\n//             .then(json => dispatch(\r\n//                 { type: \"FetchData\", data: json }))\r\n//             .catch(err => dispatch(\r\n//                 { type: \"ERROR\",msg: \"Unable to fetch data\" }))\r\n//     }\r\n// }\r\n\r\nexport const fetchData = () => {\r\n    return (dispatch) => {\r\n        return fetch('http://localhost:3001/todos')\r\n            .then(response =>  response.json())\r\n            .then(json => dispatch(\r\n                { type: \"FetchData\", data: json }))\r\n            .catch(err => dispatch(\r\n                { type: \"ERROR\",msg: \"Unable to fetch data\" }))\r\n    }\r\n}\r\n\r\nexport const fetchDelete = (task) => {\r\n    return (dispatch) => {\r\n        fetch(\"http://localhost:3001/todos/\"+task.id, {\r\n            method: 'delete',\r\n        })\r\n        .then(() => dispatch(\r\n            { type: \"FetchDelete\", data: task }))\r\n        .catch(err => dispatch(\r\n            { type: \"ERROR\",msg: \"Unable to fetch data\" }))\r\n    }\r\n}\r\n\r\nexport const fetchUpdateStatus = (task) => {\r\n    const updateStatusTask = {...task,complete: !task.complete}\r\n\r\n    return (dispatch) => {\r\n        fetch(\"http://localhost:3001/todos/\"+task.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(updateStatusTask),\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            dispatch(\r\n                { type: \"FetchUpdateStatus\", data: json},)\r\n        })\r\n        .catch(err => dispatch(\r\n            { type: \"ERROR\",msg: \"Unable to fetch data\" }))\r\n    }\r\n}\r\n\r\nexport const fetchUpdateName = (task,inputUpdate) => {\r\n    const updateStatusTask = {...task,task: inputUpdate}\r\n\r\n    return (dispatch) => {\r\n        fetch(\"http://localhost:3001/todos/\"+task.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(updateStatusTask),\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            dispatch(\r\n                { type: \"FetchUpdateName\", data: json},)\r\n        })\r\n        .catch(err => dispatch(\r\n            { type: \"ERROR\",msg: \"Unable to fetch data\" }))\r\n    }\r\n}\r\n\r\nexport const addTask = (inputName) => {\r\n    return (dispatch) => {\r\n        fetch(\"http://localhost:3001/todos/\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: Date.now(),\r\n                task: inputName,\r\n                complete:false\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => dispatch(\r\n            { type: \"AddTask\", data: json},))\r\n        .catch(err => dispatch(\r\n            { type: \"ERROR\",msg: \"Unable to fetch data\" }))\r\n    }\r\n}\r\n\r\n","import { useState } from 'react';\r\nimport { FaRegTrashAlt,FaRegGrinBeam } from 'react-icons/fa';\r\nimport {useDispatch} from 'react-redux';\r\nimport {fetchDelete, fetchUpdateStatus,fetchUpdateName} from '../redux/actions/index';\r\n\r\nfunction Todo({todo}) {\r\n  // const data = useSelector(state => state.taskReducer.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const [textChange, setTextChange] = useState(todo.task);\r\n  const [editText, setEditText] = useState(true);\r\n\r\n\r\n  const getTextLine = () => {\r\n    let text = \"text truncate\";\r\n    text += (todo.complete) ? \" strike\" : \"\"\r\n    return text;\r\n  }\r\n\r\n  const test = () => {\r\n    setEditText(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <input type=\"checkbox\" name=\"status\" value={todo.complete} onChange={() => { dispatch(fetchUpdateStatus(todo)) }} checked={todo.complete ? \"checked\" : \"\"} disabled = {!editText ? \"disabled\" : \"\"}/>\r\n        {editText \r\n        ? \r\n        (<p onDoubleClick={() => { setEditText(false); }} className={getTextLine()} >{todo.task}</p>)\r\n        :\r\n        (\r\n        <input maxLength='100' onBlur={()=>{test()}} autoFocus type=\"text\" value={textChange} onChange={(e) => { setTextChange(e.target.value) }} \r\n            onKeyDown={(event) => {\r\n              if (event.key === 'Enter' || event.key === 'Escape') {\r\n                if(textChange === \"\"){\r\n                  alert(\"Please enter name ! \")\r\n                }else {\r\n                  // onEdit(todo, textChange);\r\n                  dispatch(fetchUpdateName(todo, textChange))\r\n                  event.preventDefault()\r\n                  event.stopPropagation()\r\n                  setEditText(true);\r\n                }\r\n              }\r\n            }}\r\n        />)\r\n        }\r\n\r\n      <div className=\"icon\">\r\n        {!editText \r\n        ? \r\n        (<div onClick={() => { dispatch(fetchUpdateName(todo, textChange)); setEditText(true) }}><FaRegGrinBeam /></div>) \r\n        : \r\n        (<div onClick={() => { dispatch(fetchDelete(todo))}}><FaRegTrashAlt /></div>)\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Todo","import React from 'react';\r\n// import Todo from './Todo';\r\nimport {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchData} from '../redux/actions/index';\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList({TodoList,handleToggle,handleDelete,handelEdit}) {\r\n    const data = useSelector(state => state.taskReducer.data);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => dispatch(fetchData()), []);\r\n    // console.log(data);\r\n    return (\r\n        <>\r\n        {data.map((task,index) => <Todo key={index} todo={task}>{task.task}</Todo>)}\r\n      </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TodoList","import  { useState } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addTask} from '../redux/actions/index';\r\n\r\n\r\nfunction Add() {\r\n    const dispatch = useDispatch();\r\n    const [task, setTask] = useState('');\r\n    // const [complete, setComplete] = useState(false);\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!task){\r\n            alert('Please add a text')\r\n        }else{\r\n            // onAdd({task ,complete})\r\n            dispatch(addTask(task))\r\n            setTask('')\r\n            // setComplete(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"addTask\">\r\n            <form action=\"\" onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"Add task\" value={task} onChange={(e) => setTask(e.target.value)}/>\r\n                <input type=\"submit\" value=\"Add\" className=\"btn\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add","\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport { store } from './redux/store';\nimport Header from './views/Header';\nimport Footer from './views/Footer';\nimport TodoList from './views/TodoList';\nimport Add from './views/Add'\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n      <div className=\"todo-app\">\n        <Header/>  \n        <Add/>\n        <div className=\"content\">\n        <TodoList/>\n        </div>\n        <Footer/>\n      </div>\n   </div>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}